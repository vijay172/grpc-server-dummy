group 'com.github.simplesteph.grpc'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'
apply plugin: 'application'
mainClassName = "com.intel.grpc.image.server.ImageServer"
sourceCompatibility = 1.8


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}


repositories {
    jcenter()
    mavenCentral()
}
/*configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'io.netty') {
                details.useVersion "4.1.24.Final"
            }
        }
    }
}*/
dependencies {

    // grpc
    compile 'io.grpc:grpc-netty-shaded:1.14.0' // shaded: includes ssl libraries
    compile 'io.grpc:grpc-protobuf:1.14.0'
    compile 'io.grpc:grpc-stub:1.14.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'


}

jar {
    manifest {
        attributes 'Main-Class': 'com.intel.grpc.image.server.ImageServer'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }
    plugins {
        //run protoc with codegen plugin for grpc
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.12.0'
        }
    }
    //apply grpc plugin here in task
    generateProtoTasks {
        //all() returns collection of all protoc tasks
        //each code gen task has 2 collections - builtin (eg java,cpp) and plugins (eg grpc)
        all()*.plugins {
            //yields --grpc_out=/path/to/output
            grpc {}
        }
    }
}